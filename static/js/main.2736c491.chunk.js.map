{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["users","id","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","todos","userId","title","completed","UserInfo","props","user","className","href","TodoInfo","todo","type","value","checked","htmlFor","Todolist","preparedTodos","map","App","useState","setTitle","titleError","setTitleError","setTodo","setUser","userSelectError","setUserSelectError","isCompleted","setIsCompleted","el","find","elem","onSubmit","event","preventDefault","currentUser","trim","length","addTodo","placeholder","onChange","target","selected","person","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2736c491.chunk.js","sourcesContent":["const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React from 'react';\nimport { User } from '../../types/User';\n\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo: React.FC<Props> = (props) => {\n  const {\n    user,\n  } = props;\n\n  return (\n    <p className=\"user-info\">\n      <div className=\"user-info__item\">\n        <span className=\"user-info__title\">\n          Name:\n          {' '}\n        </span>\n        {user?.name}\n      </div>\n      <a className=\"user-info__link\" href={`mailto:${user?.email}`}>Email</a>\n    </p>\n  );\n};\n","import React from 'react';\n\nimport { UserInfo } from '../UserInfo/UserInfo';\n\nimport { Todo } from '../../types/Todo';\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <>\n    <div className=\"todo-info__item\">\n      <input\n        type=\"checkbox\"\n        name=\"todo\"\n        id=\"todo\"\n        value=\"todo\"\n        checked={todo.completed === true ? todo.completed : false}\n      />\n      <label\n        htmlFor=\"todo\"\n        data-content={todo.title}\n      >\n        {todo.title}\n      </label>\n    </div>\n    {todo.user && <UserInfo user={todo.user} />}\n  </>\n);\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport './TodoList.scss';\n\ntype Props = {\n  preparedTodos: Todo[];\n};\n\nexport const Todolist: React.FC<Props> = (props) => {\n  const {\n    preparedTodos,\n  } = props;\n\n  return (\n    <ul className=\"todo-list\">\n      {preparedTodos.map((todo) => (\n        <li\n          className=\"todo-list__item\"\n          key={todo.id}\n        >\n          <TodoInfo todo={todo} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport './App.scss';\n\nimport users from './api/users';\nimport todos from './api/todos';\nimport { Todo } from './types/Todo';\n\nimport { Todolist } from './components/TodoList/TodoList';\n\nconst App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [todo, setTodo] = useState(todos);\n  const [user, setUser] = useState('');\n  const [userSelectError, setUserSelectError] = useState(false);\n  const [isCompleted, setIsCompleted] = useState(false);\n\n  const selectUser = (event: ChangeEvent<HTMLSelectElement>) => {\n    setUser(event.target.value);\n    setUserSelectError(false);\n  };\n\n  const addTitle = (event: ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const setTodoState = (event: ChangeEvent<HTMLInputElement>) => {\n    setIsCompleted(event.target.checked);\n  };\n\n  const addTodo = () => {\n    const currentUser = users.find(el => el.name === user);\n\n    if (!title.trim()) {\n      setTitleError(true);\n    }\n\n    if (!user) {\n      setUserSelectError(true);\n    }\n\n    if (title.length && user) {\n      setTodo(\n        [...todo,\n          {\n            userId: currentUser ? currentUser.id : 0,\n            id: todo[todo.length - 1].id + 1,\n            title,\n            completed: isCompleted,\n          },\n        ],\n      );\n\n      setTitle('');\n      setUser('');\n    }\n  };\n\n  const preparedTodos: Todo[] = todo.map(el => ({\n    ...el,\n    user: users.find(elem => elem.id === el.userId) || null,\n  }));\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"app__title\">\n        Static list of todos\n      </h1>\n      <form\n        // method=\"POST\"\n        // name=\"\"\n        className=\"app__form\"\n        onSubmit={event => {\n          event.preventDefault();\n          addTodo();\n        }}\n      >\n        <label className=\"app__label\">\n          Title:\n          {' '}\n          <input\n            type=\"text\"\n            name=\"addTitle\"\n            className=\"app__todo\"\n            id=\"addTitle\"\n            value={title}\n            placeholder=\"Title\"\n            onChange={addTitle}\n          />\n          {\n            titleError && (\n              <span className=\"app__error\">\n                Please enter the title\n              </span>\n            )\n          }\n        </label>\n        <label className=\"app__label\">\n          User:\n          {' '}\n          <select\n            name=\"selectUser\"\n            className=\"app__todo\"\n            id=\"selectUser\"\n            value={user}\n            onChange={selectUser}\n          >\n            <option\n              value=\"\"\n              selected\n            >\n              Choose a user\n            </option>\n            {users.map((person) => (\n              <option\n                key={person.id}\n                value={person.name}\n              >\n                {person.name}\n              </option>\n            ))}\n          </select>\n          {\n            userSelectError && (\n              <span className=\"app__error\">\n                Please choose a user\n              </span>\n            )\n          }\n        </label>\n\n        <label\n          htmlFor=\"completed\"\n          className=\"app__label\"\n        >\n          Completed\n          {' '}\n          <input\n            type=\"checkbox\"\n            name=\"taskState\"\n            id=\"completed\"\n            checked={isCompleted}\n            onChange={setTodoState}\n          />\n        </label>\n        <button\n          className=\"submitButton\"\n          type=\"submit\"\n        >\n          Add TODO\n        </button>\n      </form>\n      <Todolist preparedTodos={preparedTodos} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}